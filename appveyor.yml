version: 1.0.0+{build}

image:
  - Previous Ubuntu

services:
  - docker

configuration: Release

platform: x64

environment:
  global:
    APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCpMyKAmM84H5d7N0oS4VLG4hPEWF/BbQCcX1XygA1gMbQzzI7KAQWKpuT348vMyX6+E37GJCGT29BqKbv3nMvFOjIsyIAWYUBNz9rYgZl1Ju6DSvzyRl3KHNTAAT4sDHud7REgVUkD0ExAUOhpbV4V+h11cMiurb9b61kzlnJE+c10qGpG1LfEXyGt8hlt0IMndFU6JB71hir2jkKRjV0urRrVxlDfz+XbMYpQ5ZVb12dfGQT1qKDuz/9VIPfXXmC+YrLTE7UJDxD1Qk5d77HHGWmNS/+abqZZ0b++ZzS+LuOhq9HYEQn38SeP1PIeP65mfUX3GeilaRSDbhgW3pK5 appveyor
    docker_login: infactum
    docker_password:
      secure: wWPsUiEtw8rfnjX2/Y3/AA==
    docker_image: infactum/tg2sip-builder

  matrix:
    - target_name: Ubuntu Bionic
      docker_tag: bionic

    - target_name: CentOS 7
      docker_tag: centos7

init:
  - sh: |
      service docker status
      service docker start
      service docker status
      docker login -u "$docker_login" -p "$docker_password"
      # docker pull "$docker_image":"$docker_tag" 

install:
  - sh: docker build buildenv/ -f buildenv/Dockerfile."$docker_tag" --cache-from "$docker_image":"$docker_tag" -t "$docker_image":"$docker_tag"

build_script: 
  - sh: >- 
      mkdir build;
      docker run --rm -v "$(pwd)":/src "$docker_image" /bin/bash -c "
        mkdir build && cd build;
        cmake -DCMAKE_BUILD_TYPE=Release /src;
        cmake --build .;
        chmod +x tg2sip;
        chmod +x gen_db;
        cp tg2sip /src/build;
        cp gen_db /src/build;"      
      7z a tg2sip_"$docker_tag".zip ./build/tg2sip ./build/gen_db ./settings.ini;

after_build:
  - sh: docker push "$docker_image":"$docker_tag"
  - sh: appveyor PushArtifact tg2sip_"$docker_tag".zip -FileName TG2SIP "$target_name"

on_finish:
  - sh: export APPVEYOR_SSH_BLOCK=true
  - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -